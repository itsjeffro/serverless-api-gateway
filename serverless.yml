service: api-gateway

provider:
  name: aws
  region: ap-southeast-2
  stage: ${opt:stage, 'dev'}
  environment:
    JWT_SIGNING_KEY: ${env:JWT_SIGNING_KEY}
  
custom:
  apiGatewayName: ApiGateway-${self:provider.stage}
  apiGatewayaAuthorizerName: ClientAuthorizer-${self:provider.stage}
  
functions:
  clientAuthorizer:
    handler: handler.clientAuthorizer
    cors: true

resources:
  Resources:

    # API gateway
    # - Our reusable API gateway for our individual services managed in their own repositories.
    ApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties: 
        Name: ${self:custom.apiGatewayName}
        Tags:
          -
            Key: Environment
            Value: ${self:provider.stage}

    # API gateway resource versions
    ApiGatewayResourceVersionOne:
      Type: AWS::ApiGateway::Resource
      Properties: 
        ParentId: { "Fn::GetAtt": [ "ApiGateway", "RootResourceId" ] }
        PathPart: v1
        RestApiId: { Ref: ApiGateway }
    
    # API gateway authorizer
    # - Our reusable authorizer which we will attach to our API gateway. We will reference the API gateway using the key/name from the "ApiGateway" resource above.
    # - The lambda is reference by key/name under functions. For example "clientAuthorizer" becomes "ClientAuthorizerLambdaFunction.Arn".
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        AuthorizerUri:
          Fn::Join:
            - ''
            -
              - 'arn:aws:apigateway:'
              - Ref: "AWS::Region"
              - ':lambda:path/2015-03-31/functions/'
              - Fn::GetAtt: "ClientAuthorizerLambdaFunction.Arn"
              - "/invocations"
        IdentitySource: method.request.header.Authorization
        IdentityValidationExpression: "Bearer .+"
        Name: ${self:custom.apiGatewayaAuthorizerName}
        RestApiId: { Ref: ApiGateway }
        Type: TOKEN
            
  Outputs:

    # API gateway outputs
    apiGatewayRestApiId:
      Value:
        Ref: ApiGateway 
      Export:
        Name: ${self:custom.apiGatewayName}-restApiId 
       
    apiGatewayRestApiRootResourceId: 
      Value:
        Fn::GetAtt:
          - ApiGateway 
          - RootResourceId 
      Export:
        Name: ${self:custom.apiGatewayName}-rootResourceId

    # API gateway resources
    apiGatewayRestApiVersionOneResourceId:
      Value:
        Ref: ApiGatewayResourceVersionOne
      Export:
        Name: ${self:custom.apiGatewayName}-versionOneResourceId

    # API gateway authorizer outputs
    apiGatewayRestApiAuthorizer:
      Value:
        Ref: ApiGatewayAuthorizer
      Export:
        Name: ${self:custom.apiGatewayName}-authorizer
