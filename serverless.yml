service: api-gateway

provider:
  name: aws
  region: ap-southeast-2
  stage: ${opt:stage, 'dev'}
  apiGateway:
    description: Reusable API gateway and authorizer
  environment:
    JWT_SIGNING_KEY: ${env:JWT_SIGNING_KEY}
  
custom:
  apiGatewayName: ApiGateway-${self:provider.stage}
  apiGatewayaAuthorizerName: ClientAuthorizer-${self:provider.stage}
  
functions:
  clientAuthorizer:
    handler: src/handlers/authorizer.auth
    cors: true

  versionOne:
    handler: src/handlers/version.versionOne
    events:
      - http:
          path: v1
          method: get
          cors: true

resources:
  Resources:
    
    # API gateway authorizer
    # - Our reusable authorizer which we will attach to our API gateway. We will reference the API gateway using the key/name from the "ApiGateway" resource above.
    # - The lambda is reference by key/name under functions. For example "clientAuthorizer" becomes "ClientAuthorizerLambdaFunction.Arn".
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        AuthorizerUri:
          Fn::Join:
            - ''
            -
              - 'arn:aws:apigateway:'
              - Ref: "AWS::Region"
              - ':lambda:path/2015-03-31/functions/'
              - Fn::GetAtt: "ClientAuthorizerLambdaFunction.Arn"
              - "/invocations"
        IdentitySource: method.request.header.Authorization
        IdentityValidationExpression: "Bearer .+"
        Name: ${self:custom.apiGatewayaAuthorizerName}
        AuthorizerResultTtlInSeconds: '0'
        RestApiId: { Ref: ApiGatewayRestApi }
        Type: TOKEN

    ApiGatewayAuthorizerPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName:
          Fn::GetAtt: ClientAuthorizerLambdaFunction.Arn
        Principal: "apigateway.amazonaws.com"
        SourceArn: {
            Fn::Join : [
              "",
              [
                "arn:aws:execute-api:",
                { Ref: "AWS::Region" },
                ":",
                { Ref: "AWS::AccountId" },
                ":",
                { Ref: ApiGatewayRestApi },
                "/authorizers/",
                { Ref: ApiGatewayAuthorizer }
              ]
            ]
          }

            
  Outputs:

    # API gateway outputs
    apiGatewayRestApiId:
      Value:
        Ref: ApiGatewayRestApi 
      Export:
        Name: ${self:custom.apiGatewayName}-restApiId 
       
    apiGatewayRestApiRootResourceId: 
      Value:
        Fn::GetAtt:
          - ApiGatewayRestApi 
          - RootResourceId 
      Export:
        Name: ${self:custom.apiGatewayName}-rootResourceId

    # API gateway resources
    # - The ref is a combination of "ApiGatewayResource" and "path" with the first letter being capital.
    # - For example, ApiGatewayResource{NormalizedPath - v1} for the authorizer would be "ApiGatewayResourceV1"
    apiGatewayRestApiVersionOneResourceId:
      Value:
        Ref: ApiGatewayResourceV1
      Export:
        Name: ${self:custom.apiGatewayName}-versionOneResourceId

    # API gateway authorizer outputs
    apiGatewayRestApiAuthorizer:
      Value:
        Ref: ApiGatewayAuthorizer
      Export:
        Name: ${self:custom.apiGatewayName}-authorizer
